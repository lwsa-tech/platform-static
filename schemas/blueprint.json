{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "services": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "image", "plan"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name for the service"
          },
          "image": {
            "type": "string",
            "description": "Docker image to use"
          },
          "plan": {
            "type": "string",
            "enum": ["pico", "nano", "micro", "small", "medium", "large", "xlarge", "2xlarge", "4xlarge"],
            "description": "Resource plan for the service"
          },
          "port": {
            "type": "integer",
            "description": "Internal port where container listens, passed as PORT env var. Default 10000"
          },
          "additionalPorts": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["port"],
              "properties": {
                "port": {
                  "type": "integer",
                  "description": "Additional port where container listens"
                },
                "expose": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "sourceRanges": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
                      }
                    }
                  },
                  "required": ["enabled"]
                }
              }
            },
            "description": "Additional ports where container listens"
          },
          "replicas": {
            "type": "integer",
            "minimum": 1,
            "description": "Number of replicas. Default 1. Cannot be >1 if using volumes"
          },
          "minReplicas": {
            "type": "integer",
            "minimum": 1,
            "description": "Minimum number of replicas for autoscaling"
          },
          "maxReplicas": {
            "type": "integer",
            "minimum": 1,
            "description": "Maximum number of replicas for autoscaling"
          },
          "scaleTriggers": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "ScaleTriggers reference the scaler that will be used",
              "required": [
                "type",
                "metadata"
              ],
              "properties": {
                "authenticationRef": {
                  "type": "object",
                  "description": "AuthenticationRef points to the TriggerAuthentication or ClusterTriggerAuthentication object that is used to authenticate the scaler with the environment",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "Kind of the resource being referred to. Defaults to TriggerAuthentication."
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "metricType": {
                  "type": "string",
                  "description": "MetricTargetType specifies the type of metric being targeted, and should be either \"Value\", \"AverageValue\", or \"Utilization\""
                },
                "useCachedMetrics": {
                  "type": "boolean"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Command to run in the container"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Arguments to the command in the container"
          },
          "ingress": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "hosts": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of hostnames for automatic certificate management"
              },
              "sourceRanges": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
                }
              }
            },
            "required": ["enabled"]
          },
          "expose": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "sourceRanges": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
                }
              }
            },
            "required": ["enabled"]
          },
          "mountVolumes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "path"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "ownership": {
                  "type": "string",
                  "description": "Optional ownership for the volume mount point, in user:group format (numeric or named, similar to chown)",
                  "pattern": "^(\\d+|[a-zA-Z_][a-zA-Z0-9_-]*):?(\\d+|[a-zA-Z_][a-zA-Z0-9_-]*)?$"
                }
              }
            }
          },
          "envVars": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "envVarsFrom": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "secrets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "configMaps": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "dbServers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["pxc", "cnpg", "dragonfly", "psmdb", "ferretdb"]
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "searches": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["elasticsearch"]
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "messageBrokers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["rabbitmq"]
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "allowFromServices": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["namespace", "name"],
              "properties": {
                "namespace": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "allowToServices": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["namespace", "name"],
              "properties": {
                "namespace": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "egress": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "toCIDRs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["range"],
                  "properties": {
                    "range": {
                      "type": "string",
                      "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "protocol": {
                      "type": "string",
                      "enum": ["TCP", "UDP"]
                    }
                  }
                }
              },
              "toFQDNs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string"
                    },
                    "host": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "protocol": {
                      "type": "string",
                      "enum": ["TCP", "UDP"]
                    }
                  },
                  "oneOf": [
                    { "required": ["pattern"] },
                    { "required": ["host"] }
                  ]
                }
              }
            },
            "required": ["enabled"]
          }
        }
      }
    },
    "cronjobs": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "image", "plan", "schedule"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name for the cron job"
          },
          "image": {
            "type": "string",
            "description": "Docker image to use"
          },
          "plan": {
            "type": "string",
            "enum": ["pico", "nano", "micro", "small", "medium", "large", "xlarge", "2xlarge", "4xlarge"],
            "description": "Resource plan for the cron job"
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Command to run in the container"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Arguments to the command in the container"
          },
          "mountVolumes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "path"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "ownership": {
                  "type": "string",
                  "description": "Optional ownership for the volume mount point, in user:group format (numeric or named, similar to chown)",
                  "pattern": "^(\\d+|[a-zA-Z_][a-zA-Z0-9_-]*):?(\\d+|[a-zA-Z_][a-zA-Z0-9_-]*)?$"
                }
              }
            }
          },
          "envVars": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "envVarsFrom": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "secrets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "configMaps": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "dbServers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["pxc", "cnpg", "dragonfly", "psmdb", "ferretdb"]
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "searches": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["elasticsearch"]
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "messageBrokers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["rabbitmq"]
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "allowToServices": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["namespace", "name"],
              "properties": {
                "namespace": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "egress": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "toCIDRs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["range"],
                  "properties": {
                    "range": {
                      "type": "string",
                      "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "protocol": {
                      "type": "string",
                      "enum": ["TCP", "UDP"]
                    }
                  }
                }
              },
              "toFQDNs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string"
                    },
                    "host": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "protocol": {
                      "type": "string",
                      "enum": ["TCP", "UDP"]
                    }
                  },
                  "oneOf": [
                    { "required": ["pattern"] },
                    { "required": ["host"] }
                  ]
                }
              }
            },
            "required": ["enabled"]
          },
          "schedule": {
            "type": "string",
            "description": "Cron schedule string (e.g., '*/5 * * * *')"
          }
        }
      }
    },
    "jobs": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "image", "plan"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name for the job"
          },
          "image": {
            "type": "string",
            "description": "Docker image to use"
          },
          "plan": {
            "type": "string",
            "enum": ["pico", "nano", "micro", "small", "medium", "large", "xlarge", "2xlarge", "4xlarge"],
            "description": "Resource plan for the job"
          },
          "hook": {
            "type": "string",
            "enum": ["PreSync", "Sync", "Skip", "PostSync", "SyncFail", "PostDelete"],
            "description": "Optional Argo CD hook type. See https://argo-cd.readthedocs.io/en/stable/user-guide/resource_hooks/#overview"
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Command to run in the container"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Arguments to the command in the container"
          },
          "mountVolumes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "path"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "ownership": {
                  "type": "string",
                  "description": "Optional ownership for the volume mount point, in user:group format (numeric or named, similar to chown)",
                  "pattern": "^(\\d+|[a-zA-Z_][a-zA-Z0-9_-]*):?(\\d+|[a-zA-Z_][a-zA-Z0-9_-]*)?$"
                }
              }
            }
          },
          "envVars": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "envVarsFrom": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "secrets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "configMaps": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "dbServers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["pxc", "cnpg", "dragonfly", "psmdb", "ferretdb"]
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "searches": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["elasticsearch"]
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "messageBrokers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["rabbitmq"]
                    },
                    "mappings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "allowToServices": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["namespace", "name"],
              "properties": {
                "namespace": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "egress": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "toCIDRs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["range"],
                  "properties": {
                    "range": {
                      "type": "string",
                      "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "protocol": {
                      "type": "string",
                      "enum": ["TCP", "UDP"]
                    }
                  }
                }
              },
              "toFQDNs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string"
                    },
                    "host": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "protocol": {
                      "type": "string",
                      "enum": ["TCP", "UDP"]
                    }
                  },
                  "oneOf": [
                    { "required": ["pattern"] },
                    { "required": ["host"] }
                  ]
                }
              }
            },
            "required": ["enabled"]
          }
        }
      }
    },
    "dbServers": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "type", "plan"],
        "allOf": [
          {
            "if": {
              "properties": {
                "type": { "const": "pxc" }
              }
            },
            "then": {
              "required": ["version", "size"],
              "properties": {
                "version": {
                  "type": "string",
                  "enum": ["8.0", "5.7"]
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": { "const": "cnpg" }
              }
            },
            "then": {
              "required": ["version", "size"],
              "properties": {
                "version": {
                  "type": "string",
                  "pattern": "^(\\d+|\\d+\\.\\d+)$"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": { "const": "ferretdb" }
              }
            },
            "then": {
              "required": ["version", "size"],
              "properties": {
                "version": {
                  "type": "string",
                  "pattern": "^(\\d+|\\d+\\.\\d+)$"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": { "const": "psmdb" }
              }
            },
            "then": {
              "required": ["size"]
            }
          },
          {
            "if": {
              "properties": {
                "type": { "const": "dragonfly" }
              }
            },
            "then": {
              "properties": {
                "memcached": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "required": ["enabled"]
                },
                "snapshot": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "size": {
                      "type": "string",
                      "pattern": "^[0-9]+Gi$"
                    }
                  },
                  "required": ["enabled", "size"]
                },
                "passwordAuth": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "required": ["enabled"]
                }
              }
            }
          }
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["pxc", "cnpg", "dragonfly", "psmdb", "ferretdb"]
          },
          "plan": {
            "type": "string",
            "enum": ["pico", "nano", "micro", "small", "medium", "large", "xlarge", "2xlarge", "4xlarge"]
          },
          "size": {
            "type": "string",
            "pattern": "^[0-9]+Gi$"
          },
          "replicas": {
            "type": "integer",
            "minimum": 1,
            "maximum": 3,
            "description": "Number of replicas. Default 1. Recommended 3 for production"
          },
          "pause": {
            "type": "boolean",
            "description": "When true, shuts down database without deleting data"
          },
          "expose": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "sourceRanges": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
                }
              }
            },
            "required": ["enabled"]
          },
          "restoreFrom": {
            "type": "object",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "searches": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "type", "version", "nodes"],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["elasticsearch"]
          },
          "version": {
            "type": "string",
            "pattern": "^\\d+(\\.\\d+(\\.\\d+)?)?$",
            "description": "May be a number like '8', major/minor like '8.15' or major/minor/sub like '8.15.2'"
          },
          "expose": {
            "type": "object",
            "required": ["enabled"],
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "sourceRanges": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
                }
              }
            }
          },
          "nodes": {
            "type": "object",
            "required": ["master", "data"],
            "properties": {
              "master": {
                "type": "object",
                "required": ["plan", "size"],
                "properties": {
                  "replicas": {
                    "type": "integer",
                    "default": 3
                  },
                  "plan": {
                    "type": "string",
                    "enum": ["pico", "nano", "micro", "small", "medium", "large", "xlarge", "2xlarge", "4xlarge"]
                  },
                  "size": {
                    "type": "string",
                    "pattern": "^[0-9]+Gi$"
                  }
                }
              },
              "data": {
                "type": "object",
                "required": ["plan", "size"],
                "properties": {
                  "replicas": {
                    "type": "integer",
                    "default": 3
                  },
                  "plan": {
                    "type": "string",
                    "enum": ["pico", "nano", "micro", "small", "medium", "large", "xlarge", "2xlarge", "4xlarge"]
                  },
                  "size": {
                    "type": "string",
                    "pattern": "^[0-9]+Gi$"
                  }
                }
              }
            }
          },
          "dashboard": {
            "type": "object",
            "required": ["enabled", "plan"],
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "sourceRanges": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
                }
              },
              "replicas": {
                "type": "integer",
                "default": 1
              },
              "plan": {
                "type": "string",
                "enum": ["pico", "nano", "micro", "small", "medium", "large", "xlarge", "2xlarge", "4xlarge"]
              }
            }
          }
        }
      }
    },
    "volumes": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "size"],
        "properties": {
          "name": {
            "type": "string"
          },
          "size": {
            "type": "string",
            "pattern": "^[0-9]+Gi$"
          }
        }
      }
    },
    "configmaps": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "data"],
        "properties": {
          "name": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    },
    "secrets": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "namespace", "data"],
        "properties": {
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    },
    "messageBrokers": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "type", "plan", "size"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name for the message broker"
          },
          "type": {
            "type": "string",
            "enum": ["rabbitmq"],
            "description": "Type of message broker"
          },
          "plan": {
            "type": "string",
            "enum": ["pico", "nano", "micro", "small", "medium", "large", "xlarge", "2xlarge", "4xlarge"],
            "description": "Resource plan for the message broker"
          },
          "size": {
            "type": "string",
            "pattern": "^[0-9]+Gi$",
            "description": "Storage size for the message broker"
          },
          "replicas": {
            "type": "integer",
            "minimum": 1,
            "default": 3,
            "description": "Number of replicas. Default 3"
          },
          "expose": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "sourceRanges": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
                }
              }
            },
            "required": ["enabled"]
          }
        }
      }
    }
  }
}
